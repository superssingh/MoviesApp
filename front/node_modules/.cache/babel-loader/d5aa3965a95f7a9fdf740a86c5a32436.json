{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [trending, setTrending] = useState([]); // const [Top, setTop] = useState([]);\n  // const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (trending.length === 0) {\n      async function fetchData(URL, {\n        signal\n      }) {\n        // You can await here\n        const {\n          data\n        } = await axios.get(URL);\n        setTrending(data.results);\n      }\n\n      fetchData(TagNames.getURL(), abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n    }\n\n    console.log(trending);\n  }, [trending]); // Or [] if effect doesn't need props or state\n\n  const handleVideo = async id => {\n    var _data$results$;\n\n    const {\n      data\n    } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.key)) ? TagNames.getVideoLink(data.results[0].key) : \"\";\n    const video = videoLink ? true : false; // this.setState({ videoLink, video });\n  };\n\n  const handleVideoClose = status => {// this.setState({ video: status });\n  };\n\n  const handlePageChange = currentPage => {\n    console.log(currentPage); // this.setState({ currentPage });\n  };\n\n  const {\n    results,\n    videoLink,\n    video,\n    currentPage,\n    pageSize\n  } = this.state;\n  const imagepath = TagNames.getImagePath();\n  const movies = Paginate(results, currentPage, pageSize);\n  const count = results.length;\n\n  if (results.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Movies not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        moviesList: movies,\n        count: count,\n        imagePath: imagepath,\n        getVideo: this.handleVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {\n        itemCount: count,\n        pageSize: pageSize,\n        currentPage: 1,\n        onPageChange: this.handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n        trailerLink: videoLink,\n        status: video,\n        handleVideoClose: this.handleVideoClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"pF1ZhgQzhxVMLktyVT+DCD9vYhE=\");\n\n_c = Home;\nexport default Home; ///--------\n// class Home extends Component {\n//   state = {\n//     data: [],\n//     results: [],\n//     videoLink: \"\",\n//     video: false,\n//     transform: 0,\n//     currentPage: 1,\n//     pageSize: 4,\n//   };\n//   componentDidMount = async () => {\n//     const { data } = await axios.get(TagNames.getURL());\n//     console.log(data);\n//     const { results } = data.ecom;\n//     this.setState({ results });\n//   };\n//   componentWillUnmount = () => {\n//     window.removeEventListener(\"scroll\", this.handleScroll);\n//   };\n//   handleScroll = (event) => {\n//     let scrollTop = event.target.scrollingElement.scrollTop,\n//       itemTranslate = Math.min(0, scrollTop / 3 - 60);\n//     this.setState({ transform: itemTranslate });\n//   };\n//   handleVideo = async (id) => {\n//     const { data } = await axios.get(TagNames.getVideoKey(id));\n//     const videoLink = (await data.results[0]?.key)\n//       ? TagNames.getVideoLink(data.results[0].key)\n//       : \"\";\n//     const video = videoLink ? true : false;\n//     this.setState({ videoLink, video });\n//   };\n//   handleVideoClose = (status) => {\n//     this.setState({ video: status });\n//   };\n//   handlePageChange = (currentPage) => {\n//     console.log(currentPage);\n//     this.setState({ currentPage });\n//   };\n//   render() {\n//     const { results, videoLink, video, currentPage, pageSize } = this.state;\n//     const imagepath = TagNames.getImagePath();\n//     const movies = Paginate(results, currentPage, pageSize);\n//     const count = results.length;\n//     if (results.length === 0) {\n//       return <h3>Movies not found.</h3>;\n//     }\n//     return (\n//       <div className=\"container\">\n//         <div className=\"home\">\n//           <MoviesList\n//             moviesList={movies}\n//             count={count}\n//             imagePath={imagepath}\n//             getVideo={this.handleVideo}\n//           />\n//           <PaginationBar\n//             itemCount={count}\n//             pageSize={pageSize}\n//             currentPage={1}\n//             onPageChange={this.handlePageChange}\n//           />\n//           <VideoPlayer\n//             trailerLink={videoLink}\n//             status={video}\n//             handleVideoClose={this.handleVideoClose}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx"],"names":["React","useState","useEffect","axios","TagNames","VideoPlayer","MoviesList","PaginationBar","Paginate","Home","trending","setTrending","abortController","AbortController","length","fetchData","URL","signal","data","get","results","getURL","cleanup","abort","console","log","handleVideo","id","getVideoKey","videoLink","key","getVideoLink","video","handleVideoClose","status","handlePageChange","currentPage","pageSize","state","imagepath","getImagePath","movies","count"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\n\nconst Home = () => {\n  const [trending, setTrending] = useState([]);\n  // const [Top, setTop] = useState([]);\n\n  // const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (trending.length === 0) {\n      async function fetchData(URL, { signal }) {\n        // You can await here\n        const { data } = await axios.get(URL);\n        setTrending(data.results);\n      }\n      fetchData(TagNames.getURL(), abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n    }\n    console.log(trending);\n  }, [trending]); // Or [] if effect doesn't need props or state\n\n  const handleVideo = async (id) => {\n    const { data } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await data.results[0]?.key)\n      ? TagNames.getVideoLink(data.results[0].key)\n      : \"\";\n\n    const video = videoLink ? true : false;\n    // this.setState({ videoLink, video });\n  };\n\n  const handleVideoClose = (status) => {\n    // this.setState({ video: status });\n  };\n\n  const handlePageChange = (currentPage) => {\n    console.log(currentPage);\n    // this.setState({ currentPage });\n  };\n\n  const { results, videoLink, video, currentPage, pageSize } = this.state;\n  const imagepath = TagNames.getImagePath();\n  const movies = Paginate(results, currentPage, pageSize);\n  const count = results.length;\n\n  if (results.length === 0) {\n    return <h3>Movies not found.</h3>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"home\">\n        <MoviesList\n          moviesList={movies}\n          count={count}\n          imagePath={imagepath}\n          getVideo={this.handleVideo}\n        />\n\n        <PaginationBar\n          itemCount={count}\n          pageSize={pageSize}\n          currentPage={1}\n          onPageChange={this.handlePageChange}\n        />\n\n        <VideoPlayer\n          trailerLink={videoLink}\n          status={video}\n          handleVideoClose={this.handleVideoClose}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n///--------\n// class Home extends Component {\n//   state = {\n//     data: [],\n//     results: [],\n//     videoLink: \"\",\n//     video: false,\n//     transform: 0,\n//     currentPage: 1,\n//     pageSize: 4,\n//   };\n\n//   componentDidMount = async () => {\n//     const { data } = await axios.get(TagNames.getURL());\n//     console.log(data);\n//     const { results } = data.ecom;\n\n//     this.setState({ results });\n//   };\n\n//   componentWillUnmount = () => {\n//     window.removeEventListener(\"scroll\", this.handleScroll);\n//   };\n\n//   handleScroll = (event) => {\n//     let scrollTop = event.target.scrollingElement.scrollTop,\n//       itemTranslate = Math.min(0, scrollTop / 3 - 60);\n//     this.setState({ transform: itemTranslate });\n//   };\n\n//   handleVideo = async (id) => {\n//     const { data } = await axios.get(TagNames.getVideoKey(id));\n//     const videoLink = (await data.results[0]?.key)\n//       ? TagNames.getVideoLink(data.results[0].key)\n//       : \"\";\n\n//     const video = videoLink ? true : false;\n//     this.setState({ videoLink, video });\n//   };\n\n//   handleVideoClose = (status) => {\n//     this.setState({ video: status });\n//   };\n\n//   handlePageChange = (currentPage) => {\n//     console.log(currentPage);\n//     this.setState({ currentPage });\n//   };\n\n//   render() {\n//     const { results, videoLink, video, currentPage, pageSize } = this.state;\n//     const imagepath = TagNames.getImagePath();\n//     const movies = Paginate(results, currentPage, pageSize);\n//     const count = results.length;\n\n//     if (results.length === 0) {\n//       return <h3>Movies not found.</h3>;\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <div className=\"home\">\n//           <MoviesList\n//             moviesList={movies}\n//             count={count}\n//             imagePath={imagepath}\n//             getVideo={this.handleVideo}\n//           />\n\n//           <PaginationBar\n//             itemCount={count}\n//             pageSize={pageSize}\n//             currentPage={1}\n//             onPageChange={this.handlePageChange}\n//           />\n\n//           <VideoPlayer\n//             trailerLink={videoLink}\n//             status={video}\n//             handleVideoClose={this.handleVideoClose}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n"]},"metadata":{},"sourceType":"module"}