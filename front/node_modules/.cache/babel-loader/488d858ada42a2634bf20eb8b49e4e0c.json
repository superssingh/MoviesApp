{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = props => {\n  _s();\n\n  const {\n    movies\n  } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n  useEffect(() => {\n    const selectedMovie = movies.filter(async m => {\n      return m.id === parseInt(props.match.params.id);\n    });\n    setMovie(selectedMovie[0]);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Movie \", movie.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"image\",\n      src: TagNames.getImagePath(movie.backdrop_path),\n      srcSet: TagNames.getImagePath(movie.backdrop_path),\n      alt: movie.title,\n      loading: \"lazy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"H/ZBLc1URFwBogbGJ8SCjE71SCw=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","TagNames","MovieDetails","props","movies","movie","setMovie","id","match","params","selectedMovie","filter","m","parseInt","cleanup","input","console","log","title","getImagePath","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,2BAA1B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,UAAU,CAACE,YAAD,CAA7B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,EAAE,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,aAAa,GAAGN,MAAM,CAACO,MAAP,CAAc,MAAOC,CAAP,IAAa;AAC/C,aAAOA,CAAC,CAACL,EAAF,KAASM,QAAQ,CAACV,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAApB,CAAxB;AACD,KAFqB,CAAtB;AAGAD,IAAAA,QAAQ,CAACI,aAAa,CAAC,CAAD,CAAd,CAAR;AACA,WAAO,MAAM;AACXI,MAAAA,OAAO;AACR,KAFD;AAGD,GARQ,EAQN,CAACC,KAAD,CARM,CAAT;AAUAC,EAAAA,OAAO,CAACC,GAAR,CAAYZ,KAAZ;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,2BAAWA,KAAK,CAACa,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AACE,MAAA,SAAS,EAAC,OADZ;AAEE,MAAA,GAAG,EAAEjB,QAAQ,CAACkB,YAAT,CAAsBd,KAAK,CAACe,aAA5B,CAFP;AAGE,MAAA,MAAM,EAAEnB,QAAQ,CAACkB,YAAT,CAAsBd,KAAK,CAACe,aAA5B,CAHV;AAIE,MAAA,GAAG,EAAEf,KAAK,CAACa,KAJb;AAKE,MAAA,OAAO,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA5BD;;GAAMhB,Y;;KAAAA,Y;AA8BN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\n\nconst MovieDetails = (props) => {\n  const { movies } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n  useEffect(() => {\n    const selectedMovie = movies.filter(async (m) => {\n      return m.id === parseInt(props.match.params.id);\n    });\n    setMovie(selectedMovie[0]);\n    return () => {\n      cleanup;\n    };\n  }, [input]);\n\n  console.log(movie);\n\n  return (\n    <div className=\"container\">\n      <h1>Movie {movie.title}</h1>\n      <img\n        className=\"image\"\n        src={TagNames.getImagePath(movie.backdrop_path)}\n        srcSet={TagNames.getImagePath(movie.backdrop_path)}\n        alt={movie.title}\n        loading=\"lazy\"\n      ></img>\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}