{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../js/constants/constants\";\nimport MoviesList from \"../jsx/moviesList\";\nimport UserContext from \"../js/contexts/userContext\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const {\n    currentUser\n  } = useContext(UserContext);\n  const {\n    moviesList,\n    addMovies\n  } = useContext(MovieContext);\n  const imagepath = TagNames.getImagePath();\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (moviesList.length === 0) {\n      async function fetchData(URL, {\n        signal\n      }) {\n        // You can await here\n        const {\n          data\n        } = await axios.get(URL);\n        addMovies(data.results);\n      }\n\n      fetchData(TagNames.getURL(), abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n      console.log(moviesList);\n    } else {\n      console.log(\"data already fetched\");\n    }\n  }, [moviesList]); // Or [] if effect doesn't need props or state\n  // const handleVideo = async (id) => {\n  //   const { data } = await axios.get(TagNames.getVideoKey(id));\n  //   const videoLink = (await data.results[0]?.key)\n  //     ? TagNames.getVideoLink(data.results[0].key)\n  //     : \"\";\n  //   const video = videoLink ? true : false;\n  //   setVideoLink(videoLink);\n  //   setVideoStatus(video);\n  // };\n  // const handleVideoClose = (status) => {\n  //   setVideoStatus(status);\n  // };\n  // const handlePageChange = (currentPage) => {\n  //   console.log(currentPage);\n  //   // setCurrentPage(currentPage);\n  // };\n\n  if (moviesList.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Movies not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Username: \", currentUser.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: /*#__PURE__*/_jsxDEV(MoviesList, {\n        movies: moviesList,\n        count: moviesList.length,\n        image_path: imagepath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"E0f+808iiM26sADl95zrIvspGe0=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/home.jsx"],"names":["React","useEffect","useContext","axios","TagNames","MoviesList","UserContext","MovieContext","Home","currentUser","moviesList","addMovies","imagepath","getImagePath","abortController","AbortController","length","fetchData","URL","signal","data","get","results","getURL","cleanup","abort","console","log","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,2BAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM;AAAEC,IAAAA;AAAF,MAAkBP,UAAU,CAACI,WAAD,CAAlC;AACA,QAAM;AAAEI,IAAAA,UAAF;AAAcC,IAAAA;AAAd,MAA4BT,UAAU,CAACK,YAAD,CAA5C;AACA,QAAMK,SAAS,GAAGR,QAAQ,CAACS,YAAT,EAAlB;AAEAZ,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMa,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,QAAIL,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,qBAAeC,SAAf,CAAyBC,GAAzB,EAA8B;AAAEC,QAAAA;AAAF,OAA9B,EAA0C;AACxC;AACA,cAAM;AAAEC,UAAAA;AAAF,YAAW,MAAMjB,KAAK,CAACkB,GAAN,CAAUH,GAAV,CAAvB;AACAP,QAAAA,SAAS,CAACS,IAAI,CAACE,OAAN,CAAT;AACD;;AACDL,MAAAA,SAAS,CAACb,QAAQ,CAACmB,MAAT,EAAD,EAAoBT,eAAe,CAACK,MAApC,CAAT;AACA,aAAO,SAASK,OAAT,GAAmB;AACxBV,QAAAA,eAAe,CAACW,KAAhB;AACD,OAFD;AAGAC,MAAAA,OAAO,CAACC,GAAR,CAAYjB,UAAZ;AACD,KAXD,MAWO;AACLgB,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GAhBQ,EAgBN,CAACjB,UAAD,CAhBM,CAAT,CALiB,CAqBC;AAElB;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,MAAIA,UAAU,CAACM,MAAX,KAAsB,CAA1B,EAA6B;AAC3B,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACE;AAAA,+BAAgBP,WAAW,CAACmB,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,6BACE,QAAC,UAAD;AACE,QAAA,MAAM,EAAElB,UADV;AAEE,QAAA,KAAK,EAAEA,UAAU,CAACM,MAFpB;AAGE,QAAA,UAAU,EAAEJ;AAHd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAxED;;GAAMJ,I;;KAAAA,I;AA0EN,eAAeA,IAAf","sourcesContent":["import React, { useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../js/constants/constants\";\nimport MoviesList from \"../jsx/moviesList\";\nimport UserContext from \"../js/contexts/userContext\";\nimport MovieContext from \"../js/contexts/movieContext\";\n\nconst Home = () => {\n  const { currentUser } = useContext(UserContext);\n  const { moviesList, addMovies } = useContext(MovieContext);\n  const imagepath = TagNames.getImagePath();\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (moviesList.length === 0) {\n      async function fetchData(URL, { signal }) {\n        // You can await here\n        const { data } = await axios.get(URL);\n        addMovies(data.results);\n      }\n      fetchData(TagNames.getURL(), abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n      console.log(moviesList);\n    } else {\n      console.log(\"data already fetched\");\n    }\n  }, [moviesList]); // Or [] if effect doesn't need props or state\n\n  // const handleVideo = async (id) => {\n  //   const { data } = await axios.get(TagNames.getVideoKey(id));\n  //   const videoLink = (await data.results[0]?.key)\n  //     ? TagNames.getVideoLink(data.results[0].key)\n  //     : \"\";\n\n  //   const video = videoLink ? true : false;\n  //   setVideoLink(videoLink);\n  //   setVideoStatus(video);\n  // };\n\n  // const handleVideoClose = (status) => {\n  //   setVideoStatus(status);\n  // };\n\n  // const handlePageChange = (currentPage) => {\n  //   console.log(currentPage);\n  //   // setCurrentPage(currentPage);\n  // };\n\n  if (moviesList.length === 0) {\n    return <h3>Movies not found.</h3>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div>Username: {currentUser.name}</div>\n      <div className=\"home\">\n        <MoviesList\n          movies={moviesList}\n          count={moviesList.length}\n          image_path={imagepath}\n        />\n\n        {/* <PaginationBar\n          itemCount={count}\n          pageSize={pageSize}\n          currentPage={1}\n          onPageChange={handlePageChange}\n        />\n\n        <VideoPlayer\n          trailerLink={videoLink}\n          status={videoStatus}\n          handleVideoClose={handleVideoClose}\n        /> */}\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}