{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const [data, setData] = useState([]);\n  useEffect(async () => {\n    if (!data) {\n      const data = await axios.get(TagNames.getURL());\n      console.log(data);\n      return () => {\n        cleanup;\n      };\n    }\n  }, []);\n\n  handleVideo = async id => {\n    var _data$results$;\n\n    const {\n      data\n    } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.key)) ? TagNames.getVideoLink(data.results[0].key) : \"\";\n    const video = videoLink ? true : false;\n    this.setState({\n      videoLink,\n      video\n    });\n  };\n\n  handleVideoClose = status => {\n    this.setState({\n      video: status\n    });\n  };\n\n  handlePageChange = currentPage => {\n    console.log(currentPage);\n    this.setState({\n      currentPage\n    });\n  };\n\n  const {\n    results,\n    videoLink,\n    video,\n    currentPage,\n    pageSize\n  } = this.state;\n  const imagepath = TagNames.getImagePath();\n  const movies = Paginate(results, currentPage, pageSize);\n  const count = results.length;\n\n  if (results.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Movies not found.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"home\",\n      children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n        moviesList: movies,\n        count: count,\n        imagePath: imagepath,\n        getVideo: this.handleVideo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {\n        itemCount: count,\n        pageSize: pageSize,\n        currentPage: 1,\n        onPageChange: this.handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n        trailerLink: videoLink,\n        status: video,\n        handleVideoClose: this.handleVideoClose\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Home, \"IEMTtLVFIuToo7X/raQbJAxzNQU=\");\n\n_c = Home;\nexport default Home; ///--------\n// class Home extends Component {\n//   state = {\n//     data: [],\n//     results: [],\n//     videoLink: \"\",\n//     video: false,\n//     transform: 0,\n//     currentPage: 1,\n//     pageSize: 4,\n//   };\n//   componentDidMount = async () => {\n//     const { data } = await axios.get(TagNames.getURL());\n//     console.log(data);\n//     const { results } = data.ecom;\n//     this.setState({ results });\n//   };\n//   componentWillUnmount = () => {\n//     window.removeEventListener(\"scroll\", this.handleScroll);\n//   };\n//   handleScroll = (event) => {\n//     let scrollTop = event.target.scrollingElement.scrollTop,\n//       itemTranslate = Math.min(0, scrollTop / 3 - 60);\n//     this.setState({ transform: itemTranslate });\n//   };\n//   handleVideo = async (id) => {\n//     const { data } = await axios.get(TagNames.getVideoKey(id));\n//     const videoLink = (await data.results[0]?.key)\n//       ? TagNames.getVideoLink(data.results[0].key)\n//       : \"\";\n//     const video = videoLink ? true : false;\n//     this.setState({ videoLink, video });\n//   };\n//   handleVideoClose = (status) => {\n//     this.setState({ video: status });\n//   };\n//   handlePageChange = (currentPage) => {\n//     console.log(currentPage);\n//     this.setState({ currentPage });\n//   };\n//   render() {\n//     const { results, videoLink, video, currentPage, pageSize } = this.state;\n//     const imagepath = TagNames.getImagePath();\n//     const movies = Paginate(results, currentPage, pageSize);\n//     const count = results.length;\n//     if (results.length === 0) {\n//       return <h3>Movies not found.</h3>;\n//     }\n//     return (\n//       <div className=\"container\">\n//         <div className=\"home\">\n//           <MoviesList\n//             moviesList={movies}\n//             count={count}\n//             imagePath={imagepath}\n//             getVideo={this.handleVideo}\n//           />\n//           <PaginationBar\n//             itemCount={count}\n//             pageSize={pageSize}\n//             currentPage={1}\n//             onPageChange={this.handlePageChange}\n//           />\n//           <VideoPlayer\n//             trailerLink={videoLink}\n//             status={video}\n//             handleVideoClose={this.handleVideoClose}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n// export default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx"],"names":["React","useState","useEffect","axios","TagNames","VideoPlayer","MoviesList","PaginationBar","Paginate","Home","data","setData","get","getURL","console","log","cleanup","handleVideo","id","getVideoKey","videoLink","results","key","getVideoLink","video","setState","handleVideoClose","status","handlePageChange","currentPage","pageSize","state","imagepath","getImagePath","movies","count","length"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,QAAZ,MAA0B,wBAA1B;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,sBAAvB;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AACA,SAASC,QAAT,QAAyB,uBAAzB;;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,YAAY;AACpB,QAAI,CAACQ,IAAL,EAAW;AACT,YAAMA,IAAI,GAAG,MAAMP,KAAK,CAACS,GAAN,CAAUR,QAAQ,CAACS,MAAT,EAAV,CAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACA,aAAO,MAAM;AACXM,QAAAA,OAAO;AACR,OAFD;AAGD;AACF,GARQ,EAQN,EARM,CAAT;;AAUAC,EAAAA,WAAW,GAAG,MAAOC,EAAP,IAAc;AAAA;;AAC1B,UAAM;AAAER,MAAAA;AAAF,QAAW,MAAMP,KAAK,CAACS,GAAN,CAAUR,QAAQ,CAACe,WAAT,CAAqBD,EAArB,CAAV,CAAvB;AACA,UAAME,SAAS,GAAG,CAAC,yBAAMV,IAAI,CAACW,OAAL,CAAa,CAAb,CAAN,mDAAM,eAAiBC,GAAvB,CAAD,IACdlB,QAAQ,CAACmB,YAAT,CAAsBb,IAAI,CAACW,OAAL,CAAa,CAAb,EAAgBC,GAAtC,CADc,GAEd,EAFJ;AAIA,UAAME,KAAK,GAAGJ,SAAS,GAAG,IAAH,GAAU,KAAjC;AACA,SAAKK,QAAL,CAAc;AAAEL,MAAAA,SAAF;AAAaI,MAAAA;AAAb,KAAd;AACD,GARD;;AAUAE,EAAAA,gBAAgB,GAAIC,MAAD,IAAY;AAC7B,SAAKF,QAAL,CAAc;AAAED,MAAAA,KAAK,EAAEG;AAAT,KAAd;AACD,GAFD;;AAIAC,EAAAA,gBAAgB,GAAIC,WAAD,IAAiB;AAClCf,IAAAA,OAAO,CAACC,GAAR,CAAYc,WAAZ;AACA,SAAKJ,QAAL,CAAc;AAAEI,MAAAA;AAAF,KAAd;AACD,GAHD;;AAKA,QAAM;AAAER,IAAAA,OAAF;AAAWD,IAAAA,SAAX;AAAsBI,IAAAA,KAAtB;AAA6BK,IAAAA,WAA7B;AAA0CC,IAAAA;AAA1C,MAAuD,KAAKC,KAAlE;AACA,QAAMC,SAAS,GAAG5B,QAAQ,CAAC6B,YAAT,EAAlB;AACA,QAAMC,MAAM,GAAG1B,QAAQ,CAACa,OAAD,EAAUQ,WAAV,EAAuBC,QAAvB,CAAvB;AACA,QAAMK,KAAK,GAAGd,OAAO,CAACe,MAAtB;;AAEA,MAAIf,OAAO,CAACe,MAAR,KAAmB,CAAvB,EAA0B;AACxB,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE,QAAC,UAAD;AACE,QAAA,UAAU,EAAEF,MADd;AAEE,QAAA,KAAK,EAAEC,KAFT;AAGE,QAAA,SAAS,EAAEH,SAHb;AAIE,QAAA,QAAQ,EAAE,KAAKf;AAJjB;AAAA;AAAA;AAAA;AAAA,cADF,eAQE,QAAC,aAAD;AACE,QAAA,SAAS,EAAEkB,KADb;AAEE,QAAA,QAAQ,EAAEL,QAFZ;AAGE,QAAA,WAAW,EAAE,CAHf;AAIE,QAAA,YAAY,EAAE,KAAKF;AAJrB;AAAA;AAAA;AAAA;AAAA,cARF,eAeE,QAAC,WAAD;AACE,QAAA,WAAW,EAAER,SADf;AAEE,QAAA,MAAM,EAAEI,KAFV;AAGE,QAAA,gBAAgB,EAAE,KAAKE;AAHzB;AAAA;AAAA;AAAA;AAAA,cAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAyBD,CAlED;;GAAMjB,I;;KAAAA,I;AAoEN,eAAeA,IAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\n\nconst Home = () => {\n  const [data, setData] = useState([]);\n\n  useEffect(async () => {\n    if (!data) {\n      const data = await axios.get(TagNames.getURL());\n      console.log(data);\n      return () => {\n        cleanup;\n      };\n    }\n  }, []);\n\n  handleVideo = async (id) => {\n    const { data } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await data.results[0]?.key)\n      ? TagNames.getVideoLink(data.results[0].key)\n      : \"\";\n\n    const video = videoLink ? true : false;\n    this.setState({ videoLink, video });\n  };\n\n  handleVideoClose = (status) => {\n    this.setState({ video: status });\n  };\n\n  handlePageChange = (currentPage) => {\n    console.log(currentPage);\n    this.setState({ currentPage });\n  };\n\n  const { results, videoLink, video, currentPage, pageSize } = this.state;\n  const imagepath = TagNames.getImagePath();\n  const movies = Paginate(results, currentPage, pageSize);\n  const count = results.length;\n\n  if (results.length === 0) {\n    return <h3>Movies not found.</h3>;\n  }\n\n  return (\n    <div className=\"container\">\n      <div className=\"home\">\n        <MoviesList\n          moviesList={movies}\n          count={count}\n          imagePath={imagepath}\n          getVideo={this.handleVideo}\n        />\n\n        <PaginationBar\n          itemCount={count}\n          pageSize={pageSize}\n          currentPage={1}\n          onPageChange={this.handlePageChange}\n        />\n\n        <VideoPlayer\n          trailerLink={videoLink}\n          status={video}\n          handleVideoClose={this.handleVideoClose}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n\n///--------\n// class Home extends Component {\n//   state = {\n//     data: [],\n//     results: [],\n//     videoLink: \"\",\n//     video: false,\n//     transform: 0,\n//     currentPage: 1,\n//     pageSize: 4,\n//   };\n\n//   componentDidMount = async () => {\n//     const { data } = await axios.get(TagNames.getURL());\n//     console.log(data);\n//     const { results } = data.ecom;\n\n//     this.setState({ results });\n//   };\n\n//   componentWillUnmount = () => {\n//     window.removeEventListener(\"scroll\", this.handleScroll);\n//   };\n\n//   handleScroll = (event) => {\n//     let scrollTop = event.target.scrollingElement.scrollTop,\n//       itemTranslate = Math.min(0, scrollTop / 3 - 60);\n//     this.setState({ transform: itemTranslate });\n//   };\n\n//   handleVideo = async (id) => {\n//     const { data } = await axios.get(TagNames.getVideoKey(id));\n//     const videoLink = (await data.results[0]?.key)\n//       ? TagNames.getVideoLink(data.results[0].key)\n//       : \"\";\n\n//     const video = videoLink ? true : false;\n//     this.setState({ videoLink, video });\n//   };\n\n//   handleVideoClose = (status) => {\n//     this.setState({ video: status });\n//   };\n\n//   handlePageChange = (currentPage) => {\n//     console.log(currentPage);\n//     this.setState({ currentPage });\n//   };\n\n//   render() {\n//     const { results, videoLink, video, currentPage, pageSize } = this.state;\n//     const imagepath = TagNames.getImagePath();\n//     const movies = Paginate(results, currentPage, pageSize);\n//     const count = results.length;\n\n//     if (results.length === 0) {\n//       return <h3>Movies not found.</h3>;\n//     }\n\n//     return (\n//       <div className=\"container\">\n//         <div className=\"home\">\n//           <MoviesList\n//             moviesList={movies}\n//             count={count}\n//             imagePath={imagepath}\n//             getVideo={this.handleVideo}\n//           />\n\n//           <PaginationBar\n//             itemCount={count}\n//             pageSize={pageSize}\n//             currentPage={1}\n//             onPageChange={this.handlePageChange}\n//           />\n\n//           <VideoPlayer\n//             trailerLink={videoLink}\n//             status={video}\n//             handleVideoClose={this.handleVideoClose}\n//           />\n//         </div>\n//       </div>\n//     );\n//   }\n// }\n\n// export default Home;\n"]},"metadata":{},"sourceType":"module"}