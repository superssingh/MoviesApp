{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      desc\n      markdown\n      category\n      slug\n      image {\n        url\n      }\n      video_url\n    }\n  }\n`;\n\nclass Home extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.state = {\n      data: [],\n      results: [],\n      videoLink: \"\",\n      video: false,\n      transform: 0,\n      currentPage: 1,\n      pageSize: 4\n    };\n    this.componentDidMount = _s(async () => {\n      _s();\n\n      const {\n        data\n      } = await useQuery({\n        query: GET_POSTS\n      }); // window.addEventListener(\"scroll\", this.handleScroll);\n      // const { data } = await axios.get(TagNames.getURL());\n\n      const {\n        results\n      } = data.ecom;\n      this.setState({\n        results\n      });\n    }, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n      return [useQuery];\n    });\n\n    this.componentWillUnmount = () => {\n      window.removeEventListener(\"scroll\", this.handleScroll);\n    };\n\n    this.handleScroll = event => {\n      let scrollTop = event.target.scrollingElement.scrollTop,\n          itemTranslate = Math.min(0, scrollTop / 3 - 60);\n      this.setState({\n        transform: itemTranslate\n      });\n    };\n\n    this.handleVideo = async id => {\n      var _data$results$;\n\n      const {\n        data\n      } = await axios.get(TagNames.getVideoKey(id));\n      const videoLink = (await ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.key)) ? TagNames.getVideoLink(data.results[0].key) : \"\";\n      const video = videoLink ? true : false;\n      this.setState({\n        videoLink,\n        video\n      });\n    };\n\n    this.handleVideoClose = status => {\n      this.setState({\n        video: status\n      });\n    };\n\n    this.handlePageChange = currentPage => {\n      console.log(currentPage);\n      this.setState({\n        currentPage\n      });\n    };\n  }\n\n  render() {\n    const {\n      results,\n      videoLink,\n      video,\n      currentPage,\n      pageSize\n    } = this.state;\n    const imagepath = TagNames.getImagePath();\n    const movies = Paginate(results, currentPage, pageSize);\n    const count = results.length;\n\n    if (results.length === 0) {\n      return /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Movies not found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"home\",\n        children: [/*#__PURE__*/_jsxDEV(MoviesList, {\n          moviesList: movies,\n          count: count,\n          imagePath: imagepath,\n          getVideo: this.handleVideo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PaginationBar, {\n          itemCount: count,\n          pageSize: pageSize,\n          currentPage: 1,\n          onPageChange: this.handlePageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(VideoPlayer, {\n          trailerLink: videoLink,\n          status: video,\n          handleVideoClose: this.handleVideoClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/Pages/home.jsx"],"names":["React","Component","axios","TagNames","VideoPlayer","MoviesList","PaginationBar","Paginate","useQuery","gql","GET_POSTS","Home","state","data","results","videoLink","video","transform","currentPage","pageSize","componentDidMount","query","ecom","setState","componentWillUnmount","window","removeEventListener","handleScroll","event","scrollTop","target","scrollingElement","itemTranslate","Math","min","handleVideo","id","get","getVideoKey","key","getVideoLink","handleVideoClose","status","handlePageChange","console","log","render","imagepath","getImagePath","movies","count","length"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport * as TagNames from \"../constants/constants\";\nimport VideoPlayer from \"../common/videoPlayer\";\nimport MoviesList from \"../common/moviesList\";\nimport PaginationBar from \"../common/paginationBar\";\nimport { Paginate } from \"../common/js/paginate\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst GET_POSTS = gql`\n  query {\n    posts {\n      id\n      title\n      desc\n      markdown\n      category\n      slug\n      image {\n        url\n      }\n      video_url\n    }\n  }\n`;\nclass Home extends Component {\n  // constructor() {\n  //   super();\n  //   this.handleScroll = this.handleScroll.bind(this);\n  // }\n\n  state = {\n    data: [],\n    results: [],\n    videoLink: \"\",\n    video: false,\n    transform: 0,\n    currentPage: 1,\n    pageSize: 4,\n  };\n\n  componentDidMount = async () => {\n    const { data } = await useQuery({ query: GET_POSTS });\n    // window.addEventListener(\"scroll\", this.handleScroll);\n    // const { data } = await axios.get(TagNames.getURL());\n    const { results } = data.ecom;\n    this.setState({ results });\n  };\n\n  componentWillUnmount = () => {\n    window.removeEventListener(\"scroll\", this.handleScroll);\n  };\n\n  handleScroll = (event) => {\n    let scrollTop = event.target.scrollingElement.scrollTop,\n      itemTranslate = Math.min(0, scrollTop / 3 - 60);\n    this.setState({ transform: itemTranslate });\n  };\n\n  handleVideo = async (id) => {\n    const { data } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await data.results[0]?.key)\n      ? TagNames.getVideoLink(data.results[0].key)\n      : \"\";\n\n    const video = videoLink ? true : false;\n    this.setState({ videoLink, video });\n  };\n\n  handleVideoClose = (status) => {\n    this.setState({ video: status });\n  };\n\n  handlePageChange = (currentPage) => {\n    console.log(currentPage);\n    this.setState({ currentPage });\n  };\n\n  render() {\n    const { results, videoLink, video, currentPage, pageSize } = this.state;\n    const imagepath = TagNames.getImagePath();\n    const movies = Paginate(results, currentPage, pageSize);\n    const count = results.length;\n\n    if (results.length === 0) {\n      return <h3>Movies not found.</h3>;\n    }\n\n    return (\n      <div className=\"container\">\n        <div className=\"home\">\n          <MoviesList\n            moviesList={movies}\n            count={count}\n            imagePath={imagepath}\n            getVideo={this.handleVideo}\n          />\n\n          <PaginationBar\n            itemCount={count}\n            pageSize={pageSize}\n            currentPage={1}\n            onPageChange={this.handlePageChange}\n          />\n\n          <VideoPlayer\n            trailerLink={videoLink}\n            status={video}\n            handleVideoClose={this.handleVideoClose}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}