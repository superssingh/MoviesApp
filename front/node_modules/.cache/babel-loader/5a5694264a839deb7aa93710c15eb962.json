{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = props => {\n  _s();\n\n  const {\n    movies\n  } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData(id, {\n      signal\n    }) {\n      // You can await here\n      const selectedMovie = movies.filter(m => m.id === parseInt(id));\n      setMovie(selectedMovie[0]);\n    }\n\n    fetchData(id, abortController.signal);\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieDetail\",\n    \"background-image\": movie.backdrop_path,\n    width: \"100%\",\n    height: \"100vh\",\n    children: movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: movie.title.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"H/ZBLc1URFwBogbGJ8SCjE71SCw=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","TagNames","MovieDetails","props","movies","movie","setMovie","id","match","params","abortController","AbortController","fetchData","signal","selectedMovie","filter","m","parseInt","cleanup","abort","backdrop_path","title","toUpperCase"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,2BAA1B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,UAAU,CAACE,YAAD,CAA7B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,EAAE,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AAEA,mBAAeC,SAAf,CAAyBL,EAAzB,EAA6B;AAAEM,MAAAA;AAAF,KAA7B,EAAyC;AACvC;AACA,YAAMC,aAAa,GAAGV,MAAM,CAACW,MAAP,CAAeC,CAAD,IAAOA,CAAC,CAACT,EAAF,KAASU,QAAQ,CAACV,EAAD,CAAtC,CAAtB;AACAD,MAAAA,QAAQ,CAACQ,aAAa,CAAC,CAAD,CAAd,CAAR;AACD;;AAEDF,IAAAA,SAAS,CAACL,EAAD,EAAKG,eAAe,CAACG,MAArB,CAAT;AACA,WAAO,SAASK,OAAT,GAAmB;AACxBR,MAAAA,eAAe,CAACS,KAAhB;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT;AAeA,sBACE;AACE,IAAA,SAAS,EAAC,aADZ;AAEE,wBAAkBd,KAAK,CAACe,aAF1B;AAGE,IAAA,KAAK,EAAC,MAHR;AAIE,IAAA,MAAM,EAAC,OAJT;AAAA,cAMGf,KAAK,CAACE,EAAN,iBACC;AAAA,6BACE;AAAA,kBAAKF,KAAK,CAACgB,KAAN,CAAYC,WAAZ;AAAL;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CAzCD;;GAAMpB,Y;;KAAAA,Y;AA2CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\n\nconst MovieDetails = (props) => {\n  const { movies } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData(id, { signal }) {\n      // You can await here\n      const selectedMovie = movies.filter((m) => m.id === parseInt(id));\n      setMovie(selectedMovie[0]);\n    }\n\n    fetchData(id, abortController.signal);\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  return (\n    <div\n      className=\"MovieDetail\"\n      background-image={movie.backdrop_path}\n      width=\"100%\"\n      height=\"100vh\"\n    >\n      {movie.id && (\n        <div>\n          <h1>{movie.title.toUpperCase()}</h1>\n          {/* <img\n            className=\"image\"\n            src={TagNames.getImagePath(movie.poster_path)}\n            srcSet={TagNames.getImagePath(movie.poster_path)}\n            alt={movie.title}\n            loading=\"lazy\"\n          ></img> */}\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}