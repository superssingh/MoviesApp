{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = props => {\n  _s();\n\n  const {\n    movies\n  } = useContext(MovieContext);\n  const id = props.match.params.id;\n  const [movie, setMovie] = useState([]);\n  const [videoLinK, setVideoLink] = useState(\"\");\n  const [videoStatus, setVideoStatus] = useState(false);\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData(id, {\n      signal\n    }) {\n      // You can await here\n      await handleVideo(id).then();\n      const selectedMovie = movies.filter(m => m.id === parseInt(id));\n      setMovie(selectedMovie[0]);\n    }\n\n    fetchData(id, abortController.signal);\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  const handleVideo = async id => {\n    var _data$results$;\n\n    const {\n      data\n    } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await ((_data$results$ = data.results[0]) === null || _data$results$ === void 0 ? void 0 : _data$results$.key)) ? TagNames.getVideoLink(data.results[0].key) : \"\";\n    const video = videoLink ? true : false;\n    setVideoLink(videoLink);\n    setVideoStatus(video);\n  };\n\n  console.log(movie);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MovieDetail\",\n    children: movie.id && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"back-cover\",\n        src: TagNames.getImagePath(movie.poster_path),\n        srcSet: TagNames.getImagePath(movie.poster_path),\n        alt: movie.title,\n        loading: \"lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"MovieInfo\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"front-cover\",\n          src: TagNames.getImagePath(movie.backdrop_path),\n          srcSet: TagNames.getImagePath(movie.backdrop_path),\n          alt: movie.title,\n          loading: \"lazy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: movie.title.toUpperCase()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: \"Overview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: movie.overview\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Rating: \", movie.vote_average, \"/10\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"Language: \", movie.original_language.toUpperCase()]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"i/toOmqqH2BDDOKABjVIB8A4z3w=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","TagNames","MovieDetails","props","movies","id","match","params","movie","setMovie","videoLinK","setVideoLink","videoStatus","setVideoStatus","abortController","AbortController","fetchData","signal","handleVideo","then","selectedMovie","filter","m","parseInt","cleanup","abort","data","axios","get","getVideoKey","videoLink","results","key","getVideoLink","video","console","log","getImagePath","poster_path","title","backdrop_path","toUpperCase","overview","vote_average","original_language"],"mappings":"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","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\n\nconst MovieDetails = (props) => {\n  const { movies } = useContext(MovieContext);\n  const id = props.match.params.id;\n  const [movie, setMovie] = useState([]);\n  const [videoLinK, setVideoLink] = useState(\"\");\n  const [videoStatus, setVideoStatus] = useState(false);\n\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    async function fetchData(id, { signal }) {\n      // You can await here\n      await handleVideo(id).then();\n      const selectedMovie = movies.filter((m) => m.id === parseInt(id));\n      setMovie(selectedMovie[0]);\n    }\n\n    fetchData(id, abortController.signal);\n    return function cleanup() {\n      abortController.abort();\n    };\n  }, []);\n\n  const handleVideo = async (id) => {\n    const { data } = await axios.get(TagNames.getVideoKey(id));\n    const videoLink = (await data.results[0]?.key)\n      ? TagNames.getVideoLink(data.results[0].key)\n      : \"\";\n\n    const video = videoLink ? true : false;\n    setVideoLink(videoLink);\n    setVideoStatus(video);\n  };\n\n  console.log(movie);\n  return (\n    <div className=\"MovieDetail\">\n      {movie.id && (\n        <div>\n          <img\n            className=\"back-cover\"\n            src={TagNames.getImagePath(movie.poster_path)}\n            srcSet={TagNames.getImagePath(movie.poster_path)}\n            alt={movie.title}\n            loading=\"lazy\"\n          ></img>\n          <div className=\"MovieInfo\">\n            <img\n              className=\"front-cover\"\n              src={TagNames.getImagePath(movie.backdrop_path)}\n              srcSet={TagNames.getImagePath(movie.backdrop_path)}\n              alt={movie.title}\n              loading=\"lazy\"\n            ></img>\n            <h1>{movie.title.toUpperCase()}</h1>\n            <h5>Overview</h5>\n            <p>{movie.overview}</p>\n            <div>\n              <h4>Rating: {movie.vote_average}/10</h4>\n              <h4>Language: {movie.original_language.toUpperCase()}</h4>\n            </div>\n\n            <div></div>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}