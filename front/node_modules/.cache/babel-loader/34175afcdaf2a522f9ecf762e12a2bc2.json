{"ast":null,"code":"var _jsxFileName = \"/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetails = props => {\n  _s();\n\n  const {\n    movies\n  } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n  useEffect(() => {\n    const abortController = new AbortController();\n\n    if (movie) {\n      async function fetchData(id, {\n        signal\n      }) {\n        // You can await here\n        const selectedMovie = movies.filter(m => {\n          return m.id === parseInt(id);\n        });\n        setMovie(selectedMovie[0]);\n      }\n\n      fetchData(id, abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n    } else {\n      console.log(\"data already fetched\");\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: movie && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Movie \", movie.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"image\",\n        src: TagNames.getImagePath(movie.backdrop_path),\n        srcSet: TagNames.getImagePath(movie.backdrop_path),\n        alt: movie.title,\n        loading: \"lazy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieDetails, \"H/ZBLc1URFwBogbGJ8SCjE71SCw=\");\n\n_c = MovieDetails;\nexport default MovieDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetails\");","map":{"version":3,"sources":["/Users/santoshsingh/Documents/WebDevelopment/ReactEcomApp/frontend/src/components/pages/movieDetails.jsx"],"names":["React","useState","useContext","useEffect","MovieContext","TagNames","MovieDetails","props","movies","movie","setMovie","id","match","params","abortController","AbortController","fetchData","signal","selectedMovie","filter","m","parseInt","cleanup","abort","console","log","title","getImagePath","backdrop_path"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,YAAP,MAAyB,6BAAzB;AACA,OAAO,KAAKC,QAAZ,MAA0B,2BAA1B;;;AAEA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM;AAAEC,IAAAA;AAAF,MAAaN,UAAU,CAACE,YAAD,CAA7B;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAMU,EAAE,GAAGJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,eAAe,GAAG,IAAIC,eAAJ,EAAxB;;AACA,QAAIN,KAAJ,EAAW;AACT,qBAAeO,SAAf,CAAyBL,EAAzB,EAA6B;AAAEM,QAAAA;AAAF,OAA7B,EAAyC;AACvC;AACA,cAAMC,aAAa,GAAGV,MAAM,CAACW,MAAP,CAAeC,CAAD,IAAO;AACzC,iBAAOA,CAAC,CAACT,EAAF,KAASU,QAAQ,CAACV,EAAD,CAAxB;AACD,SAFqB,CAAtB;AAGAD,QAAAA,QAAQ,CAACQ,aAAa,CAAC,CAAD,CAAd,CAAR;AACD;;AACDF,MAAAA,SAAS,CAACL,EAAD,EAAKG,eAAe,CAACG,MAArB,CAAT;AACA,aAAO,SAASK,OAAT,GAAmB;AACxBR,QAAAA,eAAe,CAACS,KAAhB;AACD,OAFD;AAGD,KAZD,MAYO;AACLC,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACD;AACF,GAjBQ,CAAT;AAmBA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,cACGhB,KAAK,iBACJ;AAAA,8BACE;AAAA,6BAAWA,KAAK,CAACiB,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AACE,QAAA,SAAS,EAAC,OADZ;AAEE,QAAA,GAAG,EAAErB,QAAQ,CAACsB,YAAT,CAAsBlB,KAAK,CAACmB,aAA5B,CAFP;AAGE,QAAA,MAAM,EAAEvB,QAAQ,CAACsB,YAAT,CAAsBlB,KAAK,CAACmB,aAA5B,CAHV;AAIE,QAAA,GAAG,EAAEnB,KAAK,CAACiB,KAJb;AAKE,QAAA,OAAO,EAAC;AALV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD,CAxCD;;GAAMpB,Y;;KAAAA,Y;AA0CN,eAAeA,YAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport MovieContext from \"../js/contexts/movieContext\";\nimport * as TagNames from \"../js/constants/constants\";\n\nconst MovieDetails = (props) => {\n  const { movies } = useContext(MovieContext);\n  const [movie, setMovie] = useState([]);\n  const id = props.match.params.id;\n\n  useEffect(() => {\n    const abortController = new AbortController();\n    if (movie) {\n      async function fetchData(id, { signal }) {\n        // You can await here\n        const selectedMovie = movies.filter((m) => {\n          return m.id === parseInt(id);\n        });\n        setMovie(selectedMovie[0]);\n      }\n      fetchData(id, abortController.signal);\n      return function cleanup() {\n        abortController.abort();\n      };\n    } else {\n      console.log(\"data already fetched\");\n    }\n  });\n\n  return (\n    <div className=\"container\">\n      {movie && (\n        <div>\n          <h1>Movie {movie.title}</h1>\n          <img\n            className=\"image\"\n            src={TagNames.getImagePath(movie.backdrop_path)}\n            srcSet={TagNames.getImagePath(movie.backdrop_path)}\n            alt={movie.title}\n            loading=\"lazy\"\n          ></img>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n"]},"metadata":{},"sourceType":"module"}